df <- na.omit(df)
View(df)
colSums(is.na(df))
View(missing_values)
missing_values$municipio[is.na(missing_values$municipio) & missing_values$casos_acumulados != 0] <- "Não informado"
View(missing_values)
missing_values$Município[is.na(missing_values$Município) & missing_values$Casos Acumulados != 0] <- "Não informado"
names(df)
names(df)
names(df)
names(df)[names(df) == "Município"] <- "Municipio"
names(df)[names(df) == "asos novos notificados na semana epidemiológica"] <- "Casos_novos_notificados_semana_epidemiologica"
names(df)[names(df) == "Óbitos novos notificados na semana epidemiológica"] <- "Obitos_novos_notificados_semana_epidemiologica"
names(df)[names(df) == "Casos Acumulados"] <- "Casos_Acumulados"
names(df)[names(df) == "Óbitos Acumulados"] <- "Obitos_Acumulados"
sum(is.na(df))
df <- read_excel("/Users/anamaria/especializacao/modulo_3/atividade/df.xlsx")
is_data_frame <- is.data.frame(df)
print(is_data_frame)
names(df)
names(df)[names(df) == "Município"] <- "Municipio"
names(df)[names(df) == "asos novos notificados na semana epidemiológica"] <- "Casos_novos_notificados_semana_epidemiologica"
names(df)[names(df) == "Óbitos novos notificados na semana epidemiológica"] <- "Obitos_novos_notificados_semana_epidemiologica"
names(df)[names(df) == "Casos Acumulados"] <- "Casos_Acumulados"
names(df)[names(df) == "Óbitos Acumulados"] <- "Obitos_Acumulados"
str(df)
str(df)
missing_values$Municipio[is.na(missing_values$Municipio) & missing_values$Casos_Acumulados != 0] <- "Não informado"
View(missing_values)
missing_values = subset(df, is.na(Municipio))
head(missing_values, 20)
missing_values$Municipio[is.na(missing_values$Municipio) & missing_values$Casos_Acumulados != 0] <- "Não informado"
df$Municipio[is.na(df$Municipio) & df$Casos_Acumulados != 0] <- "Não informado"
colSums(is.na(df))
#df <- na.omit(df)
df$Municipio[is.na(df$Municipio) & df$Casos_Acumulados != 0] <- "Não informado"
colSums(is.na(df))
df <- na.omit(df)
colSums(is.na(df))
View(df)
df$Substr <- substr(df$Ano_Semana, 4, 7)
df <- read_excel("/Users/anamaria/especializacao/modulo_3/atividade/df.xlsx")
is_data_frame <- is.data.frame(df)
print(is_data_frame)
df <- as.data.frame(df)
names(df)
names(df)[names(df) == "Município"] <- "Municipio"
names(df)[names(df) == "Casos novos notificados na semana epidemiológica"] <- "Casos_novos_notificados_semana_epidemiologica"
names(df)[names(df) == "Óbitos novos notificados na semana epidemiológica"] <- "Obitos_novos_notificados_semana_epidemiologica"
names(df)[names(df) == "Casos Acumulados"] <- "Casos_Acumulados"
names(df)[names(df) == "Óbitos Acumulados"] <- "Obitos_Acumulados"
str(df)
Ano <- df$Substr <- substr(df$Ano_Semana, 4, 7)
View(df)
View(df)
df$Ano <- ifelse(nchar(df$Ano_Semana) == 7,
substr(df$Ano_Semana, 1, 4),
ifelse(nchar(df$Ano_Semana) == 6, substr(df$Ano_Semana, 1, 4), NA))
View(df)
df <- read_excel("/Users/anamaria/especializacao/modulo_3/atividade/df.xlsx")
is_data_frame <- is.data.frame(df)
print(is_data_frame)
names(df)
names(df)[names(df) == "Município"] <- "Municipio"
names(df)[names(df) == "Casos novos notificados na semana epidemiológica"] <- "Casos_novos_notificados_semana_epidemiologica"
names(df)[names(df) == "Óbitos novos notificados na semana epidemiológica"] <- "Obitos_novos_notificados_semana_epidemiologica"
names(df)[names(df) == "Casos Acumulados"] <- "Casos_Acumulados"
names(df)[names(df) == "Óbitos Acumulados"] <- "Obitos_Acumulados"
str(df)
df$Ano <- ifelse(nchar(df$Ano_Semana) == 7,
substr(df$Ano_Semana, 4, 7),
ifelse(nchar(df$Ano_Semana) == 6, substr(df$Ano_Semana, 3, 6), NA))
View(df)
sum(is.na(df))
colSums(is.na(df))
missing_values = subset(df, is.na(Municipio))
head(missing_values, 20)
df$Municipio[is.na(df$Municipio) & df$Casos_Acumulados != 0] <- "Não informado"
colSums(is.na(df))
df <- na.omit(df)
colSums(is.na(df))
duplicados <- duplicated(df)
duplicados <- duplicated(df)
print(duplicados)
duplicados== TRUE
ha_duplicados <- any(duplicados)
ha_duplicados
duplicados <- duplicated(df)
ha_duplicados <- any(duplicados)
print(ha_duplicados)
View(df)
df$`Metro/Interior` <- factor(df$`Metro/Interior`, levels = c("Reg. Metropolitana", "Interior"))
print(levels(df$`Metro/Interior`))
df$`Metro/Interior` <- factor(df$`Metro/Interior`,
levels = c("Reg. Metropolitana", "Interior"),
labels = c("Reg. Metropolitana", "Interior"))
print(levels(df$`Metro/Interior`))
View(df)
is_factor <- is.factor(df$`Metro/Interior`)
print(is_factor)
df$`Metro/Interior` <- factor(df$`Metro/Interior`, levels = c("Reg. Metropolitana", "Interior"), labels = c("Reg. Metropolitana", "Interior"))
is_factor <- is.factor(df$`Metro/Interior`)
print(is_factor)
summary_df <- summary(df)
print(summary_df)
summary_df$Info
print(summary(df[[Info]]))
df[df$Casos_novos_notificados_semana_epidemiologica < 0]
df[df$Casos_novos_notificados_semana_epidemiologica < 0,]
View(df)
df_goiania <- df[df$Municipio == "Goiânia", ]
print(head(df_goiania, 10))
casos_negativos <- df[df$Casos_novos_notificados_semana_epidemiologica < 0,]
print(casos_negativos[6,0])
casos_negativos <- df[df$Casos_novos_notificados_semana_epidemiologica < 0,]
print(casos_negativos[6,])
casos_negativos <- df[df$Casos_novos_notificados_semana_epidemiologica < 0,]
print(casos_negativos$Casos_novos_notificados_semana_epidemiologica)
View(df_goiania)
View(df_goiania)
colSums(df_goiania["Casos_Acumulados"])
total_casos_acumulados <- colSums(df_goiania["Casos_Acumulados"])
total_obitos_acumulados <- colSums(df_goiania["Obitos_Acumulados"])
print("O total de casos acumulados de Covid19 em Goiânia no Ano de 2021 é", total_casos_acumulados, "enquanto o total de óbitos acumulados é", total_obitos_acumulados )
total_casos_acumulados <- colSums(df_goiania["Casos_Acumulados"])
total_obitos_acumulados <- colSums(df_goiania["Obitos_Acumulados"])
mensagem <- paste("O total de casos acumulados de Covid19 em Goiânia no Ano de 2021 é", total_casos_acumulados, "enquanto o total de óbitos acumulados é", total_obitos_acumulados)
print(mensagem)
total_casos_acumulados <- colSums(df_goiania["Casos_Acumulados"])
total_obitos_acumulados <- colSums(df_goiania["Obitos_Acumulados"])
mensagem <- paste("O total de casos acumulados de Covid19 em Goiânia no Ano de 2021 foi de ", total_casos_acumulados, " casos. Enquanto o total de óbitos acumulados é", total_obitos_acumulados)
print(mensagem)
total_casos_acumulados <- colSums(df_goiania["Casos_Acumulados"])
total_obitos_acumulados <- colSums(df_goiania["Obitos_Acumulados"])
mensagem <- paste("O total de casos acumulados de Covid19 em Goiânia no Ano de 2021 foi de ", total_casos_acumulados, " casos. Enquanto o total de óbitos acumulados foi", total_obitos_acumulados, "no Ano de 2021.")
print(mensagem)
total_casos_acumulados <- colSums(df_goiania["Casos_Acumulados"])
total_obitos_acumulados <- colSums(df_goiania["Obitos_Acumulados"])
mensagem <- paste("O total de casos acumulados de Covid19 em Goiânia no Ano de 2021 foi de ", total_casos_acumulados, \n, " casos. Enquanto o total de óbitos acumulados foi", total_obitos_acumulados, "no Ano de 2021.")
total_casos_acumulados <- colSums(df_goiania["Casos_Acumulados"])
total_obitos_acumulados <- colSums(df_goiania["Obitos_Acumulados"])
mensagem <- paste("O total de casos acumulados de Covid19 em Goiânia no Ano de 2021 foi de ", total_casos_acumulados, /n, " casos. Enquanto o total de óbitos acumulados foi", total_obitos_acumulados, "no Ano de 2021.")
total_casos_acumulados <- colSums(df_goiania["Casos_Acumulados"])
total_obitos_acumulados <- colSums(df_goiania["Obitos_Acumulados"])
mensagem <- paste("O total de casos acumulados de Covid19 em Goiânia no Ano de 2021 foi de ", total_casos_acumulados, "\n", "casos. Enquanto o total de óbitos acumulados foi", total_obitos_acumulados, "no Ano de 2021.")
print(mensagem)
total_casos_acumulados <- colSums(df_goiania["Casos_Acumulados"])
total_obitos_acumulados <- colSums(df_goiania["Obitos_Acumulados"])
mensagem1 <- paste("O total de casos acumulados de Covid19 em Goiânia no Ano de 2021 foi de ", total_casos_acumulados, "casos.")
mensagem2 <- paste("Enquanto o total de óbitos acumulados foi", total_obitos_acumulados, "no Ano de 2021.")
print(mensagem1)
print(mensagem2)
total_casos_acumulados <- colSums(df_goiania["Casos_Acumulados"])
total_obitos_acumulados <- colSums(df_goiania["Obitos_Acumulados"])
mensagem1 <- paste("O total de casos acumulados de Covid19 em Goiânia no Ano de 2021 foi de ", total_casos_acumulados, "casos.")
mensagem2 <- paste("Enquanto o total de óbitos acumulados foi", total_obitos_acumulados, "no Ano de 2021.")
print(mensagem1)
print(mensagem2)
View(df)
df$Semana <- ifelse(nchar(df$Ano_Semana) == 7,
substr(df$Ano_Semana, 1, 2),
ifelse(nchar(df$Ano_Semana) == 6, substr(df$Ano_Semana, 1, 1), NA))
View(df)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
df <- read_excel("/Users/anamaria/especializacao/modulo_3/atividade/df.xlsx")
is_data_frame <- is.data.frame(df)
print(is_data_frame)
df <- as.data.frame(df)
names(df)
names(df)[names(df) == "Município"] <- "Municipio"
names(df)[names(df) == "Casos novos notificados na semana epidemiológica"] <- "Casos_novos_notificados_semana_epidemiologica"
names(df)[names(df) == "Óbitos novos notificados na semana epidemiológica"] <- "Obitos_novos_notificados_semana_epidemiologica"
names(df)[names(df) == "Casos Acumulados"] <- "Casos_Acumulados"
names(df)[names(df) == "Óbitos Acumulados"] <- "Obitos_Acumulados"
str(df)
df$Ano <- ifelse(nchar(df$Ano_Semana) == 7,
substr(df$Ano_Semana, 4, 7),
ifelse(nchar(df$Ano_Semana) == 6, substr(df$Ano_Semana, 3, 6), NA))
df$Semana <- ifelse(nchar(df$Ano_Semana) == 7,
substr(df$Ano_Semana, 1, 2),
ifelse(nchar(df$Ano_Semana) == 6, substr(df$Ano_Semana, 1, 1), NA))
sum(is.na(df))
colSums(is.na(df))
missing_values = subset(df, is.na(Municipio))
head(missing_values, 20)
df$Municipio[is.na(df$Municipio) & df$Casos_Acumulados != 0] <- "Não informado"
colSums(is.na(df))
df <- na.omit(df)
colSums(is.na(df))
duplicados <- duplicated(df)
ha_duplicados <- any(duplicados)
print(ha_duplicados)
df <- df[!duplicated(df), ]
df$`Metro/Interior` <- factor(df$`Metro/Interior`, levels = c("Reg. Metropolitana", "Interior"),
labels = c("Reg. Metropolitana", "Interior"))
is_factor <- is.factor(df$`Metro/Interior`)
print(is_factor)
summary_df <- summary(df)
print(summary_df)
casos_negativos <- df[df$Casos_novos_notificados_semana_epidemiologica < 0,]
print(casos_negativos$Casos_novos_notificados_semana_epidemiologica)
df$Casos_novos_notificados_semana_epidemiologica[df$Casos_novos_notificados_semana_epidemiologica < 0] <- 0
summary_df_new <- summary(df)
print(summary_df_new)
df_goiania <- df[df$Municipio == "Goiânia", ]
print(head(df_goiania, 10))
total_casos_acumulados <- colSums(df_goiania["Casos_Acumulados"])
total_obitos_acumulados <- colSums(df_goiania["Obitos_Acumulados"])
mensagem1 <- paste("O total de casos acumulados de Covid19 em Goiânia no Ano de 2021 foi de ", total_casos_acumulados, "casos.")
mensagem2 <- paste("Enquanto o total de óbitos acumulados foi", total_obitos_acumulados, "no Ano de 2021.")
print(mensagem1)
print(mensagem2)
x_1 <- df_goiania["Semana"]
y_1 <- df_goiania["Casos_Acumulados"]
plot(x, y, type = "l",
main = "Casos Acumulados por Semana",
xlab = "X", ylab = "Y", col = "blue")
x_1 <- df_goiania["Semana"]
y_1 <- df_goiania["Casos_Acumulados"]
plot(x_1, y_1, type = "l",
main = "Casos Acumulados por Semana",
xlab = "X", ylab = "Y", col = "blue")
x_1 <- df_goiania$Semana
y_1 <- df_goiania$Casos_Acumulados
plot(x_1, y_1, type = "l",
main = "Casos Acumulados por Semana",
xlab = "Semana",
ylab = "Casos Acumulados",
col = "blue",
lwd = 2)
points(x_1, y_1, col = "blue", pch = 16)
x_2 <- df_goiania$Semana
y_2 <- df_goiania$Obitos_Acumulados
plot(x_2, y_2, type = "l",
main = "Óbitos Acumulados por Semana",
xlab = "Semana",
ylab = "'Óbitos  Acumulados",
col = "red",
lwd = 1)
points(x_2, y_2, col = "red", pch = 16)
x_2 <- df_goiania$Semana
y_2 <- df_goiania$Obitos_Acumulados
plot(x_2, y_2, type = "l",
main = "Óbitos Acumulados por Semana",
xlab = "Semana",
ylab = "'Óbitos  Acumulados",
col = "red",
lwd = 1)
#points(x_2, y_2, col = "red", pch = 16)
x_1 <- df_goiania$Semana
y_1 <- df_goiania$Casos_Acumulados
plot(x_1, y_1, type = "l",
main = "Casos Acumulados por Semana",
xlab = "Semana",
ylab = "Casos Acumulados",
col = "blue",
lwd = 1)
df$Regiao <- ifelse(df$UF %in% c("AC", "AP", "AM", "PA", "RO", "RR", "TO"), "Norte",
ifelse(df$UF %in% c("AL", "BA", "CE", "MA", "PB", "PI", "PE", "RN", "SE"), "Nordeste",
ifelse(df$UF %in% c("DF", "GO", "MT", "MS"), "Centro-Oeste",
ifelse(df$UF %in% c("PR", "RS", "SC"), "Sul",
ifelse(df$UF %in% c("ES", "MG", "RJ", "SP"), "Sudeste", NA)))))
View(df)
df$Regiao <- ifelse(df$UF %in% c("AC", "AP", "AM", "PA", "RO", "RR", "TO"), "Norte",
ifelse(df$UF %in% c("AL", "BA", "CE", "MA", "PB", "PI", "PE", "RN", "SE"), "Nordeste",
ifelse(df$UF %in% c("DF", "GO", "MT", "MS"), "Centro-Oeste",
ifelse(df$UF %in% c("PR", "RS", "SC"), "Sul",
ifelse(df$UF %in% c("ES", "MG", "RJ", "SP"), "Sudeste", NA)))))
df_filtrado <- df[, c("UF", "Regiao")]
head(df_filtrado, 10)
df$Regiao <- ifelse(df$UF %in% c("AC", "AP", "AM", "PA", "RO", "RR", "TO"), "Norte",
ifelse(df$UF %in% c("AL", "BA", "CE", "MA", "PB", "PI", "PE", "RN", "SE"), "Nordeste",
ifelse(df$UF %in% c("DF", "GO", "MT", "MS"), "Centro-Oeste",
ifelse(df$UF %in% c("PR", "RS", "SC"), "Sul",
ifelse(df$UF %in% c("ES", "MG", "RJ", "SP"), "Sudeste", NA)))))
df_filtrado <- df[, c("UF", "Regiao")]
head(df_filtrado, 30)
View(df_filtrado)
install.packages("lubridate")
install.packages("fdth")
install.packages("xtable")
install.packages("RColorBrewer")
setwd <- "/Users/anamaria/especializacao/modulo_4"
df.nv24 <- read.csv("DNOPEN24.csv", sep = ";")
head(df.nv24)
dim(df.nv24)
setwd <- "/Users/anamaria/especializacao/modulo_4"
df.nv24 <- read.csv("DNOPEN24.csv", sep = ";")
head(df.nv24)
dim(df.nv24)
View(df.nv24)
is.data.frame(df.nv24)
vars_selecionadas <- c('LOCNASC', 'IDADEMAE', 'ESTCIVMAE', 'QTDFILVIVO', 'QTDFILMORT',
'GESTACAO', 'GRAVIDEZ', 'PARTO', 'CONSULTAS', 'DTNASC',
'SEXO', 'APGAR1', 'APGAR5', 'RACACOR', 'PESO',
'IDANOMAL', 'CODUFNATU', 'ESCMAE2010', 'RACACORMAE', 'QTDGESTANT',
'QTDPARTNOR', 'QTDPARTCES', 'IDADEPAI', 'SEMAGESTAC', 'CONSPRENAT',
'STTRABPART', 'STCESPARTO', 'TPNASCASSI')
df <- df.nv24[ ,vars_selecionadas]
dim(df)
table(df$LOCNASC)
df$LOCNASC <- factor(df$LOCNASC, levels = c(1,2,3,4,5,9),
labels = c("Hospital",
"Outro Estab Saúde",
"Domicílio",
"Aldeia Indígena",
"Outros",
"Ignorado"),
ordered = FALSE)
table(df$LOCNASC)
table(df$LOCNASC)
table(df$ESTCIVMAE)
df$ESTCIVMAE <- factor(df$ESTCIVMAE, levels = c(1,2,3,4,5,9),
labels = c("Solteira",
"Casada",
"Viúva",
"Separada judicialmente",
"União consensual",
"Ignorado"),
ordered = FALSE)
table(df$ESTCIVMAE)
table(df$GESTACAO)
df$GESTACAO <- factor(df$GESTACAO, levels = c(1,2,3,4,5,6,9),
labels = c("Menos de 22 semanas",
"22 a 27 semanas",
"28 a 31 semanas",
"32 a 36 semanas",
"37 a 41 semanas",
"42 semanas e mais",
"Ignorado"),
ordered = TRUE)
table(df$GESTACAO)
table(df$GRAVIDEZ)
df$GRAVIDEZ <- factor(df$GRAVIDEZ, levels= c(1,2,3,9),
labels = c("Única",
"Dupla",
"Tripla e mais",
"Ignorado"),
ordered = TRUE)
table(df$GRAVIDEZ)
dim(df.nv24) # quantidade de linhas e colunas
#table(df$PARTO)
df$PARTO <- factor(df$PARTO, levels = c(1,2,9),
labels = c("Vaginal",
"Cesáreo",
"Ignorado"),
ordered = FALSE)
#table(df$PARTO)
table(df$GRAVIDEZ)
df$GRAVIDEZ <- factor(df$GRAVIDEZ, levels= c(1,2,3,9),
labels = c("Única",
"Dupla",
"Tripla e mais",
"Ignorado"),
ordered = TRUE)
table(df$GRAVIDEZ)
table(df$GRAVIDEZ)
setwd <- "/Users/anamaria/especializacao/modulo_4"
df.nv24 <- read.csv("DNOPEN24.csv", sep = ";")
head(df.nv24)
dim(df.nv24) # quantidade de linhas e colunas
setwd <- "/Users/anamaria/especializacao/modulo_4"
df.nv24 <- read.csv("DNOPEN24.csv", sep = ";")
head(df.nv24)
dim(df.nv24) # quantidade de linhas e colunas
is.data.frame(df.nv24)
table(df$GRAVIDEZ)
df$GRAVIDEZ <- factor(df$GRAVIDEZ, levels= c(1,2,3,9),
labels = c("Única",
"Dupla",
"Tripla e mais",
"Ignorado"),
ordered = TRUE)
table(df$GRAVIDEZ)
setwd <- "/Users/anamaria/especializacao/modulo_4"
df.nv24 <- read.csv("DNOPEN24.csv", sep = ";")
head(df.nv24)
dim(df.nv24) # quantidade de linhas e colunas
is.data.frame(df.nv24)
vars_selecionadas <- c('LOCNASC', 'IDADEMAE', 'ESTCIVMAE', 'QTDFILVIVO', 'QTDFILMORT',
'GESTACAO', 'GRAVIDEZ', 'PARTO', 'CONSULTAS', 'DTNASC',
'SEXO', 'APGAR1', 'APGAR5', 'RACACOR', 'PESO',
'IDANOMAL', 'CODUFNATU', 'ESCMAE2010', 'RACACORMAE', 'QTDGESTANT',
'QTDPARTNOR', 'QTDPARTCES', 'IDADEPAI', 'SEMAGESTAC', 'CONSPRENAT',
'STTRABPART', 'STCESPARTO', 'TPNASCASSI')
df <- df.nv24[ ,vars_selecionadas]
dim(df)
table(df$LOCNASC)
df$LOCNASC <- factor(df$LOCNASC, levels = c(1,2,3,4,5,9),
labels = c("Hospital",
"Outro Estab Saúde",
"Domicílio",
"Aldeia Indígena",
"Outros",
"Ignorado"),
ordered = FALSE)
table(df$LOCNASC)
table(df$ESTCIVMAE)
df$ESTCIVMAE <- factor(df$ESTCIVMAE, levels = c(1,2,3,4,5,9),
labels = c("Solteira",
"Casada",
"Viúva",
"Separada judicialmente",
"União consensual",
"Ignorado"),
ordered = FALSE)
table(df$ESTCIVMAE)
table(df$GESTACAO)
df$GESTACAO <- factor(df$GESTACAO, levels = c(1,2,3,4,5,6,9),
labels = c("Menos de 22 semanas",
"22 a 27 semanas",
"28 a 31 semanas",
"32 a 36 semanas",
"37 a 41 semanas",
"42 semanas e mais",
"Ignorado"),
ordered = TRUE)
table(df$GESTACAO)
table(df$GRAVIDEZ)
df$GRAVIDEZ <- factor(df$GRAVIDEZ, levels= c(1,2,3,9),
labels = c("Única",
"Dupla",
"Tripla e mais",
"Ignorado"),
ordered = TRUE)
table(df$GRAVIDEZ)
View(df)
table(df$CONSULTAS) #Obs.: Essa variável já veio categorizada no dataframe
table(df$CONSPRENAT)
# Reproduzindo os mesmos intervalos de classes da variável CONSULTAS:
df$CONSPRENAT_cat <- cut(df$CONSPRENAT, breaks=c(-0.01,0,3,6,98,99))
table(df$CONSPRENAT_cat)
# Podemos ainda adicionar os rótulos das classes:
df$CONSPRENAT_cat <- cut(df$CONSPRENAT, breaks=c(-0.01,0,3,6,98,99),
labels = c("Nenhuma", "1 a 3", "4 a 6", "7 ou mais","Ignorado"),
ordered = TRUE)
table(df$CONSPRENAT_cat)
library(lubridate)
df$DTNASC <- dmy(df$DTNASC)
head(df$DTNASC)
df$MES.NASC <- month(df$DTNASC)
head(df$MES.NASC)
df$MES.NASC <- factor(df$MES.NASC, levels = 1:5, # 1:12,
labels = c("Jan", "Fev", "Mar", "Abr", "Mai"),
# , "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"),
ordered = TRUE)
table(df$MES.NASC)
getwd()
setwd('/Users/anamaria/especializacao/aula_extra/')
dataset <- read.csv("DO22OPEN.csv")
View(dataset)
dataset <- read.csv("DO22OPEN.csv",  sep = ";")
View(dataset)
dataset <- read.csv2("DO22OPEN.csv",)
dataset <- read.csv2("DO22OPEN.csv")
View(dataset)
dim(dataset)
head(dataset)
str(dataset)
View(dataset)
# se precisar mudar o diretorio usar o comando setwd
setwd("/Users/anamaria/especializacao/aula_extra/")
dataset <- read.csv2("DO22OPEN.csv")
# vamos usar o comando str
str(dataset)
# selecionando apenas as variaveis de interesse
dados_filtrados <- select(dataset, TIPOBITO, DTOBITO, DTNASC, HORAOBITO, SEXO, ESC, ESC2010, RACACOR)
# ja faz um bom tempo que instalou o pacote? Se sim, atualize o pacote
# update.packages("dplyr")
library(dplyr)
# selecionando apenas as variaveis de interesse
dados_filtrados <- select(dataset, TIPOBITO, DTOBITO, DTNASC, HORAOBITO, SEXO, ESC, ESC2010, RACACOR)
# verificando a dimensao do conjunto de dados
dim(dados_filtrados)
# visao geral do banco
glimpse(dados_filtrados) # funcao similar aos str mas do pacote dplyer
# como lidar com os NA's?
# excluir todas as linhas que tem pelo menos um NA
dados_filtrados2 <- dados_filtrados %>% na.omit()
# verificando a dimensao do conjunto de dados sem NA
dim(dados_filtrados2)
# quantas linhas foram excluídas?
dim(dados_filtrados)[1] - dim(dados_filtrados2)[1]
dados_filtrados$TIPOBITO <-  factor(dados_filtrados$TIPOBITO, levels = c(1, 2),
labels = c("Fetal", "Nao fetal"))
is.factor(dados_filtrados$TIPOBITO)
table(dados_filtrados$TIPOBITO)
table(dados_filtrados$TIPOBITO, useNA = "always")
dados_filtrados$TIPOBITO <- NULL
dim(dados_filtrados)
# para trabalhar com datas, vamos utilizar o package lubridata
#install.packages("lubridate")
library(lubridate)
#head(dados_filtrados$DTOBITO)
dados_filtrados$DTOBITO <- dados_filtrados$DTOBITO %>% dmy()
class(dados_filtrados$DTOBITO)
head(dados_filtrados$DTOBITO)
# quantidade de obitos por mes
dados_filtrados$DTOBITO %>% month() %>% table() %>% prop.table()
# mas quantos Na's tenho na variavel?
dados_filtrados$DTOBITO %>% is.na() %>% sum()
#head(dados_filtrados$DTNASC)
dados_filtrados$DTNASC <- dados_filtrados$DTNASC %>% dmy()
class(dados_filtrados$DTNASC)
# quantidade de nascimento por mes
dados_filtrados$DTNASC %>% month() %>% table() %>% prop.table()
# mas quantos Na's tenho na variavel?
dados_filtrados$DTNASC %>% is.na() %>% sum()
# modificando a variavel "Tipo de obito"
#head(dados_filtrados$TIPOBITO)
dados_filtrados$TIPOBITO <-  factor(dados_filtrados$TIPOBITO, levels = c(1, 2),
labels = c("Fetal", "Nao fetal"))
